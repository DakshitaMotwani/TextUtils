{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","Title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutUs","onClick","greenMode","title","toggleMode","role","htmlFor","TextForm","Text","setText","useState","history","UpdateHistory","Fragment","style","color","gmode","heading","value","onChange","event","console","log","target","prevhistory","backgroundColor","rows","handleUpClick","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClear","reverse","joinedWords","split","join","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleUndo","length","newHistory","pop","defaultProps","Alert","alert","msg","About","class","App","setMode","setalert","setgMode","message","setTimeout","BrowserRouter","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0e38732f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.Title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutUs}</Link>\r\n              </li>\r\n            </ul>\r\n            \r\n            <button type=\"button\" onClick = {props.greenMode} className=\"greenbtn btn btn-success btn-circle btn-circular mx-2\" title='Green mode'></button>\r\n            \r\n            <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light' ? 'Enable Dark Mode' : 'Disable Dark Mode'}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    Title : PropTypes.string.isRequired,\r\n    aboutUs : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    Title : 'Set Title',\r\n    aboutUs : 'About'\r\n}","import React,{useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [Text, setText] = useState('Enter your Text');\r\n  const [history,UpdateHistory] = useState([]);\r\n  \r\n  //for upper case\r\n  const handleUpClick = () => {\r\n    setText(Text.toUpperCase())\r\n    props.showAlert(\"Success: Text has been converted to uppercase\");\r\n  }\r\n  //for lower case\r\n  const handleLoClick = () => {\r\n    setText(Text.toLowerCase())\r\n    props.showAlert(\"Success: Text has been converted to Lowercase\");\r\n  };\r\n  //for clearing text\r\n  const handleClear = () => {\r\n    setText('');\r\n  };\r\n\r\n  //reverse\r\n  const reverse = () => {\r\n    let splitWord = Text.split(\"\");\r\n\r\n    let reverseWord = splitWord.reverse(\"\");\r\n    let joinedWords = reverseWord.join(\"\");\r\n    let newText = joinedWords\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Text is reversed\");\r\n  };\r\n\r\n  //copy text\r\n  const handleCopy = () => {\r\n    var Text = document.getElementById(\"TextArea\");\r\n    Text.select();\r\n    navigator.clipboard.writeText(Text.value);\r\n    props.showAlert(\"Text copied to clipboard\");\r\n  }\r\n\r\n  //undo \r\n  const handleUndo =() => {\r\n    if(history.length >1){\r\n      const newHistory = [...history]\r\n      newHistory.pop();\r\n      UpdateHistory(newHistory);\r\n      setText(newHistory[newHistory.length-1]);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //for entering text\r\n  const handleOnChange = (event) => {\r\n    console.log(\"change me\");\r\n    setText(event.target.value)\r\n    UpdateHistory((prevhistory)=>[...prevhistory,event.target.value]);\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n   <div className=\"Container\" style={{color:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black')}}>\r\n      <h2>{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"TextArea\" value= {Text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#4f4f5e' : (props.gmode==='green'?'#a5d7c0' : 'white') , color: props.mode==='dark' ? 'white' : (props.gmode==='green'?'black' : 'black')}} rows=\"10\"></textarea>\r\n      </div>\r\n\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={handleClear}>Clear Text</button>\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={reverse} title='reverse'><i className=\"fa fa-backward\"/></button>\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn mx-2 my-2\" style={{backgroundColor:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black') , color:props.mode==='dark'?'black' : (props.gmode==='green'?'black' : 'white')}} onClick={handleUndo}>Undo</button>\r\n\r\n\r\n    </div>\r\n    <div className=\"Container my-4\" style={{color:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black')}}>\r\n      <h3>Your Text Summary</h3>\r\n      <p>Your Text has {Text.split(\" \").length} words and {Text.length} characters.</p>\r\n      <p>{0.008 * Text.split(\" \").length} minutes read</p>\r\n      <h3>Preview of your entered text</h3>\r\n      <p>{Text.length >0 ? Text : \"Enter something in text box\"}</p>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-success\" role=\"alert\">\r\n        <strong>{props.alert.msg}</strong>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div class=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n        <h1 style={{color:props.mode==='dark'?'white' : (props.gmode==='green'?'white' : 'black')}}>About Us</h1>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\">\r\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                About Our Service\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseOne\" class=\"accordion-collapse collapse show\">\r\n            <div class=\"accordion-body\">\r\n                <strong>It is a free service!</strong> You can manipulate your text in the way you want. Here we also provide you with green and dark modes to make your user expeirence comfortable.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\">\r\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n                Know about features.\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseTwo\" class=\"accordion-collapse collapse\">\r\n            <div class=\"accordion-body\">\r\n                <strong>Know here about UpperCase, Lowercase, reverse, Undo,Clear Text and copy.</strong> On clicking on the following buttons they will respond you in the same way. They are interactive.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\">\r\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n                Thank You!\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseThree\" class=\"accordion-collapse collapse\">\r\n            <div class=\"accordion-body\">\r\n                <strong>Thank You for choosing us.</strong> Wish to get you back here soon.\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport React,{useState} from 'react'\nimport {\n  BrowserRouter,\n  Route,\n  Routes,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [gmode, setgMode] = useState('light');\n\n  const showAlert = (message)=>{\n      setalert({\n        msg: message,\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1400);\n  }\n  //green mode\n  const greenMode =()=>{\n    if(gmode==='light'){\n      setgMode('green');\n      document.body.style.backgroundColor = '#11995a';\n      showAlert(\"Green mode is enabled\");\n    }\n    else{\n      setgMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\");\n    }\n  };\n\n  //toggle-dark-mode\n  const toggleMode =()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#16263e';\n      showAlert(\"Dark mode is enabled\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\");\n    }\n  };\n  return (\n    <>\n      <BrowserRouter>\n      <Navbar Title=\"TextUtils\" mode= {mode} toggleMode= {toggleMode} gmode={gmode} greenMode={greenMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\" >\n      <Routes>\n          < Route exact path=\"/\" element={<TextForm heading = \"Enter the text to analyze\" mode={mode} showAlert={showAlert} gmode={gmode}/>}/>\n   \n          <Route exact path=\"/About\" element={<About mode={mode} showAlert={showAlert} gmode={gmode}/>}/> \n      </Routes> \n      </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}